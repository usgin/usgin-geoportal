<project name="usgin-geoportal" default="config" basedir=".">
    <property file="config.properties"/>
    <property name="gpt.dir" value="WEB-INF/classes/gpt/config"/>
    <property name="context.dir" value="META-INF"/>
    <property name="driver.dir" value="postgres-drivers"/>
    <property name="lib.dir" value="WEB-INF/lib"/>
    <property name="db.connection.string" value="jdbc:postgresql://${db.host}:${db.port}/${db.name}"/>

    <target name="config" description="replace configuration parameters in Geoportal files">
        <copy file="META-INF/context-template.xml" tofile="${context.dir}/context.xml"/>
        <replace file="${context.dir}/context.xml" token="$(db.connection.string)" value="${db.connection.string}"/>
        <replace file="${context.dir}/context.xml" token="$(db.username)" value="${db.username}"/>
        <replace file="${context.dir}/context.xml" token="$(db.password)" value="${db.password}"/>

        <copy file="WEB-INF/classes/gpt/config/gpt-template.xml" tofile="${gpt.dir}/gpt.xml"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(lucene.index.location)" value="${lucene.index.location}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(mail.host)" value="${mail.host}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(mail.port)" value="${mail.port}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(mail.username)" value="${mail.username}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(mail.password)" value="${mail.password}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(mail.emailAddress)" value="${mail.emailAddress}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(admin.name)" value="${admin.name}"/>
        <replace file="${gpt.dir}/gpt.xml" token="$(admin.password)" value="${admin.password}"/>

        <condition property="postgres.driver.file" value="postgresql-9.2-1002.jdbc4.jar">
            <equals arg1="${db.postgres.version}" arg2="9.2"/>
        </condition>

        <condition property="postgres.driver.file" value="postgresql-9.1-903.jdbc4.jar">
            <equals arg1="${db.postgres.version}" arg2="9.1"/>
        </condition>

        <condition property="postgres.driver.file" value="postgresql-9.0-802.jdbc4.jar">
            <equals arg1="${db.postgres.version}" arg2="9.0"/>
        </condition>

        <condition property="postgres.driver.file" value="postgresql-8.4-703.jdbc4.jar">
            <equals arg1="${db.postgres.version}" arg2="8.4"/>
        </condition>

        <condition property="postgres.driver.file" value="postgresql-8.3-607.jdbc4.jar">
            <equals arg1="${db.postgres.version}" arg2="8.3"/>
        </condition>

        <condition property="postgres.driver.file" value="postgresql-8.2-512.jdbc4.jar">
            <equals arg1="${db.postgres.version}" arg2="8.2"/>
        </condition>

        <copy file="${driver.dir}/${postgres.driver.file}" tofile="${lib.dir}/${postgres.driver.file}"/>

        <exec executable="postgres-scripts/create_schema_linuxpg.sh">
            <arg value="${db.host}"/>
            <arg value="${db.port}"/>
            <arg value="${db.name}"/>
            <arg value="${db.username}"/>
        </exec>
    </target>
</project>